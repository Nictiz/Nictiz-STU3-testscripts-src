<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="addNarrativesToFolder" default="build">
    <!-- 
        By default, only handle the files in all FHIR3-0-2-MM* folders under dev. If required, other folders can be 
        added using a comma-separated list. -->
    <property name="output.dir" value="dev/FHIR3-0-2-MM**"/>
    
    <property name="narrativegenerator.version" value="0.9.0"/>
    <property name="narrativegenerator.localdir" value=""/>

    <dirset id="in.dirs" dir="${basedir}">
        <include name="${output.dir}/**/_reference/resources"/>
    </dirset>
    
    <!-- Relative paths turn out to be a nightmare to get right, so lets convert it to an absolute path -->
    <property name="narrativegenerator.localdir.abs" location="${narrativegenerator.localdir}"/>

    <!-- Tell the main build script where to find common asserts and place the build scripts -->
    <dirname property="common.dir" file="${ant.file.addNarrativesToFolder}"/>
    <property name="lib.dir"       location="${common.dir}/lib"/>

    <!-- Construct the path to the test scripts, either the locally defined dir or a new dir under "lib" -->
    <property name="narrativegenerator.repo.dir" location="${lib.dir}/Nictiz-narrative-generator/${narrativegenerator.version}"/>
    <condition property="narrativegenerator.dir" value="${narrativegenerator.localdir.abs}" else="${narrativegenerator.repo.dir}">
        <length string="${narrativegenerator.localdir}" trim="true" when="greater" length="0"/>
    </condition>
    
    <!-- Include the main buildscript from the testscript repo (or the locally defined version) -->
    <include as="main" file="${narrativegenerator.repo.dir}/build/build.xml" optional="true"/>

    <!-- If we couldn't load the main build script, load it directly from Github. -->
    <condition property="repo.url" value="https://raw.githubusercontent.com/Nictiz/HL7-mappings/fhir-narrativegenerator-${narrativegenerator.version}/fhir-narrativegenerator/build.xml" else="file://"> <!-- Set to something nonsensical if the condition is not met, so include won't crash -->
        <not>
            <available file="${narrativegenerator.dir}"/>
        </not>
    </condition>
    <echo message="${repo.url}"/>
    <include as="main" optional="true">
        <url url="${repo.url}"/>
    </include>
    
    <!-- Check if we need to download the testscript tools repo from Github, which is needed if we don't have it
         already and if we didn't specify to use a local copy (we never download anything when using a local copy so we
         cannot accidentally override it). -->
    <target name="checkForRepoDownload">
        <condition property="download.repo">
            <and>
                <length string="${narrativegenerator.localdir}" trim="true" when="equal" length="0"/>
                <not>
                    <available file="${narrativegenerator.repo.dir}"/>
                </not>               
            </and>
        </condition>
    </target>

    <macrodef name="download">
        <attribute name="path"/>
        <sequential>
            <get src="https://raw.githubusercontent.com/Nictiz/HL7-mappings/${narrativegenerator.version}/@{path}"
                dest="${narrativegenerator.repo.dir}/@{path}"/>
        </sequential>
    </macrodef>
    
    <!-- Download and extract the Nictiz testscript tools from Github if we don't have them already --> 
    <target name="getToolRepo" depends="checkForRepoDownload" if="download.repo">
        <sequential>
            <echo>Downloading the narrative generator from Github</echo>
            <echo>If you want to use a local copy for debugging, specifiy it with the -Dnarrativegenerator.localdir=... parameter</echo>
            <echo/>
            <mkdir dir="${narrativegenerator.dir}/"/>
            <get src="https://github.com/Nictiz/HL7-mappings/releases/download/fhir-narrativegenerator-${narrativegenerator.version}/fhir-narrativegenerator-${narrativegenerator.version}.zip" dest="${narrativegenerator.dir}"/>
            <unzip src="${narrativegenerator.dir}/fhir-narrativegenerator-${narrativegenerator.version}.zip" dest="${narrativegenerator.dir}"/>
            <delete file="${narrativegenerator.dir}/fhir-narrativegenerator-${narrativegenerator.version}.zip"/>
            <move file="${narrativegenerator.dir}/fhir-narrativegenerator" tofile="${narrativegenerator.dir}"/>
        </sequential>
    </target>
    
    <!-- Call the build script from the tooling repo -->
    <extension-point name="build" depends="getToolRepo, main.build"/>
        
</project>
