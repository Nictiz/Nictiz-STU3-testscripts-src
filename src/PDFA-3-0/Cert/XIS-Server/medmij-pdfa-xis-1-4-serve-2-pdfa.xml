<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://hl7.org/fhir/STU3/testscript.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript" nts:scenario="server">
    <id value="xis-1-4-serve-2-pdfa"/>
    <version value="stu3-2.0"/>
    <name value="PDFA - XIS Server - Scenario 1.4 - Serve two PDFA documents"/>
    <description value="Scenario 1.4 - Serve two PDFA documents of XXX-Baltus."/>
    <nts:patientTokenFixture href="pdfa-nl-core-patient-XXX-Baltus-token.xml"/>
    <profile id="Binary-profile">
        <reference value="http://hl7.org/fhir/StructureDefinition/Binary"/>
    </profile>
    
    <test id="scenario1-4-serve-DocumentReference">
        <name value="Scenario 1.4"/>
        <description value="Serve DocumentReference resources"/>
        <nts:include value="operation-search-responseId-xis">
            <nts:with-parameter name="resource" value="DocumentReference"/>
            <nts:with-parameter name="params" value="?status=current"/>
            <nts:with-parameter name="responseid" value="documentreference-search-response"/>
        </nts:include>
        <nts:include value="medmij/assert.successfulSearch.response" scope="common"/>
        <action>
            <assert>
                <description value="Confirm that the returned searchset Bundle contains at least 2 DocumentReference resources."/>
                <direction value="response"/>
                <expression value="Bundle.entry.where(resource.is(DocumentReference)).count() >= 2"/>
            </assert>
        </action>
        <nts:include value="assert.resourceWithLoinc.response">
            <nts:with-parameter name="code" value="68688-1"/>
        </nts:include>
        <nts:include value="assert.resourceWithLoinc.response">
            <nts:with-parameter name="code" value="34781-5"/>
        </nts:include>
    </test>
    
    <test id="scenario1-4-serve-pdfa-document-1">
        <name value="Scenario 1.4 - Serve first PDFA document"/>
        <description value="Serve first PDFA document in PDF/A format or through a Binary resource."/>
        <nts:include value="variable.PDFFomBundle.fixture">
            <nts:with-parameter name="variableName" value="pdfa1-url"/>
            <nts:with-parameter name="sourceId" value="documentreference-search-response"/>
            <nts:with-parameter name="index" value="0"/>
        </nts:include>
        <nts:include value="operation-read-url-xis">
            <nts:with-parameter name="resource" value="Binary"/>
            <nts:with-parameter name="url" value="${pdfa1-url}"/>
        </nts:include>
        <nts:include value="assert.success.response" scope="common"/>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Binary. Set to warning only because the response does not have to be a Binary."/>
                <direction value="response"/>
                <resource value="Binary"/>
                <warningOnly value="true"/>
            </assert>
        </action>
    </test>
    
    <test id="scenario1-4-serve-pdfa-document-2">
        <name value="Scenario 1.4 - Serve second PDFA document"/>
        <description value="Serve second PDFA document in PDF/A format or through a Binary resource."/>
        <nts:include value="variable.PDFFomBundle.fixture">
            <nts:with-parameter name="variableName" value="pdfa2-url"/>
            <nts:with-parameter name="sourceId" value="documentreference-search-response"/>
            <nts:with-parameter name="index" value="1"/>
        </nts:include>
        <nts:include value="operation-read-url-xis">
            <nts:with-parameter name="resource" value="Binary"/>
            <nts:with-parameter name="url" value="${pdfa2-url}"/>
        </nts:include>
        <nts:include value="assert.success.response" scope="common"/>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is Binary. Set to warning only because the response does not have to be a Binary."/>
                <direction value="response"/>
                <resource value="Binary"/>
                <warningOnly value="true"/>
            </assert>
        </action>
    </test>
</TestScript>