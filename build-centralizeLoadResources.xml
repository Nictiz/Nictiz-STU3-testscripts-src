<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="centralizeLoadResourcesForProject" default="build">
    <!-- Build the NTS project using the tools (including the extended build script) in the Nictiz-tooling-testscripts
         repository. It will download a copy from Github if needed.
         If you'd rather use a local copy, specify its path with the -Dtestscripttools.localdir parameter. -->
    
    <property name="testscripttools.version" value="MM-2324-3"/>
    <property name="testscripttools.localdir" value=""/>
    
    <!-- Relative paths turn out to be a nightmare to get right, so lets convert it to an absolute path -->
    <property name="testscripttools.localdir.abs" location="${testscripttools.localdir}"/>

    <!-- Tell the main build script which folders to include during the build -->
    <dirname property="common.dir"        file="${ant.file.centralizeLoadScript}"/>
    <property name="lib.dir"              location="${common.dir}/lib"/>
    <property name="input.dir"            location="${common.dir}/dev"/>
    <property name="subdirs" value="FHIR3-0-2-MM201901-Cert,FHIR3-0-2-MM201901-Test,FHIR3-0-2-MM202001-Cert,FHIR3-0-2-MM202001-Test,FHIR3-0-2-MM202002-Cert,FHIR3-0-2-MM202002-Test"/>

    <!-- Construct the path to the test scripts, either the locally defined dir or a new dir under "lib" -->
    <property name="testscripttools.repo.dir" location="${lib.dir}/Nictiz-tooling-testscripts/${testscripttools.version}"/>
    <condition property="testscripttools.dir" value="${testscripttools.localdir.abs}" else="${testscripttools.repo.dir}">
        <length string="${testscripttools.localdir}" trim="true" when="greater" length="0"/>
    </condition>
    
    <!-- Include the main buildscript from the testscript repo (or the locally defined version) -->
    <include as="main" file="${testscripttools.dir}/ant/build.xml" optional="true"/>

    <!-- If we couldn't load the main build script, load it directly from Github. -->
    <condition property="repo.url" value="https://raw.githubusercontent.com/Nictiz/Nictiz-tooling-testscripts/${testscripttools.version}/centralizeLoadResources/ant/build.xml" else="file://"> <!-- Set to something nonsensical if the condition is not met, so include won't crash -->
        <not>
            <isset property="xslt.dir"/>
        </not>
    </condition>
    <include as="main" optional="true">
        <url url="${repo.url}"/>
    </include>
    
    <!-- Check if we need to download the testscript tools repo from Github, which is needed if we don't have it
         already and if we didn't specify to use a local copy (we never download anything when using a local copy so we
         cannot accidentally override it). -->
    <target name="checkForRepoDownload">
        <condition property="download.repo">
            <and>
                <length string="${testscripttools.localdir}" trim="true" when="equal" length="0"/>
                <not>
                    <available file="${testscripttools.dir}"/>
                </not>               
            </and>
        </condition>
    </target>
    
    <!-- Download and extract the Nictiz testscript tools from Github if we don't have them already --> 
    <target name="getToolRepo" depends="checkForRepoDownload" if="download.repo">
        <sequential>
            <echo>Downloading the testscript tools repo from Github</echo>
            <echo>If you want to use a local copy for debugging, specifiy it with the -Dtestscripttools.localdir=... parameter</echo>
            <echo/>
            <mkdir dir="${testscripttools.dir}/"/>
            <local name="zip.name"/>
            <property name="zip.name" value="${testscripttools.dir}/package.zip"/>
            <get src="https://github.com/Nictiz/Nictiz-tooling-testscripts/archive/${testscripttools.version}.zip"
                dest="${zip.name}"/>
            <unzip src="${zip.name}" dest="${testscripttools.dir}" failOnEmptyArchive="true">
                <patternset>
                    <include name="*/centralizeLoadResources/**"/>
                </patternset>
                <mapper type="regexp" from="^.*?/centralizeLoadResources/(.*)" to="\1"/>
            </unzip>
            <delete file="${zip.name}"/>
            <property name="hastestscripttools" value="true" />
        </sequential>
    </target>
    
    <!-- Call the build script from the tooling repo -->
    <extension-point name="build" depends="getToolRepo, main.build"/>
        
</project>
